{
  "contractName": "Address",
  "abi": [],
  "bytecode": "0x604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a7230582050eb1841bde0f4fc80fb13ac7ed8c88b1c67b3ad6a257646e123732687e611300029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a7230582050eb1841bde0f4fc80fb13ac7ed8c88b1c67b3ad6a257646e123732687e611300029",
  "sourceMap": "85:996:67:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "85:996:67:-;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\n/**\n * Utility library of inline functions on addresses\n */\nlibrary Address {\n    /**\n     * Returns whether the target address is a contract\n     * @dev This function will return false if invoked during the constructor of a contract,\n     * as the code is not actually created until after the constructor finishes.\n     * @param account address of the account to check\n     * @return whether the target address is a contract\n     */\n    function isContract(address account) internal view returns (bool) {\n        uint256 size;\n        // XXX Currently there is no better way to check if there is a contract in an address\n        // than to check the size of the code at that address.\n        // See https://ethereum.stackexchange.com/a/14016/36603\n        // for more details about how this works.\n        // TODO Check this again before the Serenity release, because all addresses will be\n        // contracts then.\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n}\n",
  "sourcePath": "/Users/unomasanori/projects/DEMO_MVP/trace-connectivity/contracts/openzeppelin-solidity/contracts/utils/Address.sol",
  "ast": {
    "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/trace-connectivity/contracts/openzeppelin-solidity/contracts/utils/Address.sol",
    "exportedSymbols": {
      "Address": [
        7672
      ]
    },
    "id": 7673,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7655,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:67"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "Utility library of inline functions on addresses",
        "fullyImplemented": true,
        "id": 7672,
        "linearizedBaseContracts": [
          7672
        ],
        "name": "Address",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7670,
              "nodeType": "Block",
              "src": "529:550:67",
              "statements": [
                {
                  "assignments": [
                    7663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7663,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 7670,
                      "src": "539:12:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7662,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "539:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7664,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "539:12:67"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 7663,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1018:4:67",
                        "valueSize": 1
                      }
                    },
                    {
                      "account": {
                        "declaration": 7657,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1038:7:67",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 7665,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(account)\n}",
                  "src": "1007:56:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7666,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7663,
                      "src": "1064:4:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 7667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1071:1:67",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1064:8:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7661,
                  "id": 7669,
                  "nodeType": "Return",
                  "src": "1057:15:67"
                }
              ]
            },
            "documentation": "Returns whether the target address is a contract\n@dev This function will return false if invoked during the constructor of a contract,\nas the code is not actually created until after the constructor finishes.\n@param account address of the account to check\n@return whether the target address is a contract",
            "id": 7671,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7657,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 7671,
                  "src": "483:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "482:17:67"
            },
            "returnParameters": {
              "id": 7661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7660,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7671,
                  "src": "523:4:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7659,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:4:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "522:6:67"
            },
            "scope": 7672,
            "src": "463:616:67",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 7673,
        "src": "85:996:67"
      }
    ],
    "src": "0:1082:67"
  },
  "legacyAST": {
    "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/trace-connectivity/contracts/openzeppelin-solidity/contracts/utils/Address.sol",
    "exportedSymbols": {
      "Address": [
        7672
      ]
    },
    "id": 7673,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7655,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:67"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "Utility library of inline functions on addresses",
        "fullyImplemented": true,
        "id": 7672,
        "linearizedBaseContracts": [
          7672
        ],
        "name": "Address",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7670,
              "nodeType": "Block",
              "src": "529:550:67",
              "statements": [
                {
                  "assignments": [
                    7663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7663,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 7670,
                      "src": "539:12:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7662,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "539:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7664,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "539:12:67"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 7663,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1018:4:67",
                        "valueSize": 1
                      }
                    },
                    {
                      "account": {
                        "declaration": 7657,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1038:7:67",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 7665,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(account)\n}",
                  "src": "1007:56:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7666,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7663,
                      "src": "1064:4:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 7667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1071:1:67",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1064:8:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7661,
                  "id": 7669,
                  "nodeType": "Return",
                  "src": "1057:15:67"
                }
              ]
            },
            "documentation": "Returns whether the target address is a contract\n@dev This function will return false if invoked during the constructor of a contract,\nas the code is not actually created until after the constructor finishes.\n@param account address of the account to check\n@return whether the target address is a contract",
            "id": 7671,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7657,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 7671,
                  "src": "483:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "482:17:67"
            },
            "returnParameters": {
              "id": 7661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7660,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7671,
                  "src": "523:4:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7659,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:4:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "522:6:67"
            },
            "scope": 7672,
            "src": "463:616:67",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 7673,
        "src": "85:996:67"
      }
    ],
    "src": "0:1082:67"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-08-02T06:57:22.168Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {},
    "notice": "Utility library of inline functions on addresses"
  }
}